/// Reutilize Bootstrap mixins to add new responsive modifiers
@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-up($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .border#{$infix}-thick { border-width: 4px !important; }

    @each $spacer, $length in $spacers {
      .f#{$infix}-#{$spacer} {
        font-size: $length !important;
      }

      @each $direction in (top, right, bottom, left) {
        .#{$direction}#{$infix}-#{$spacer} { #{$direction}: $length !important; }
      }
    }

    $overflows: (auto, hidden, scroll);
    $overflow-axis: (x, y);
    @each $overflow in $overflows {
      .overflow#{$infix}-#{$overflow} {
        overflow: $overflow !important;
      }

      @each $axis in $overflow-axis {
        .overflow-#{$axis}#{$infix}-#{$overflow} {
          overflow-#{$axis}: $overflow !important;
        }
      }
    }

    @each $color, $rgb in $colors {
      .background#{$infix}-#{$color} {
        background-color: $rgb !important;

        &:focus {
          background-color: $rgb !important;
        }
      }

      @each $opacity, $degree in $opacities {
        .background#{$infix}-#{$color}-t#{$opacity} {
          background-color: scale-color($rgb, $alpha: $degree);
        }
      }

      .scrollbar#{$infix}-#{$color} {
        scrollbar-color: var(--#{$color}) transparent;
        scrollbar-width: thin;

        &::-webkit-scrollbar {
          width: 5px;
          height: 8px;
          background-color: transparent;
        }

        &::-webkit-scrollbar-thumb {
          background: var(--#{$color});
        }
      }

      .border#{$infix}-#{$color} {
        border-color: $rgb !important;
      }

      .#{$color} {
        color: $rgb !important;

        &:focus {
          color: $rgb !important;
        }

        ::-moz-selection,
        ::selection {
          background: $rgb;
          color: white;
        }
      }
    }

    @each $prop, $abbrev in (width: w, height: h) {
      @each $size, $length in $sizes {
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .#{$abbrev}#{$infix}-#{$size} { #{$prop}: $length !important; }
        .min-#{$abbrev}#{$infix}-#{$size} { min-#{$prop}: $length !important; }
        .max-#{$abbrev}#{$infix}-#{$size} { max-#{$prop}: $length !important; }
      }
    }
  }
}

/// This creates a navbar that can be toggled on focus and doesn't
/// require CSS.
.navbar {
  &:focus-within {
    .navbar-collapse {
      @extend .d-block;
    }
  }

  .dropdown {
    & > .dropdown-menu {
      @extend .d-none;
    }

    &:hover,
    &:focus-within {
      & > .dropdown-menu {
        @extend .d-block;
      }
    }
  }
}

/// Creates a toggle button without JS
.toggler {
  opacity: 0;
  position: absolute;

  & + .toggled {
    z-index: 10;
    visibility: hidden;
  }

  &:checked + .toggled {
    visibility: visible;
  }

  & + label {
    border: none;
    outline: none;
  }

  &:focus + label {
    outline: 1px dotted grey ;
  }
}
